{"ast":null,"code":"import \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.filter.js\";\nimport \"core-js/modules/esnext.iterator.some.js\";\nimport Cookies from 'js-cookie';\nexport default {\n  mounted() {\n    Cookies.set('skey', 'nOX_gv0S', {\n      expires: 7\n    });\n    Cookies.set('vid', '442726869', {\n      expires: 7\n    });\n  },\n  data() {\n    return {\n      data: {}\n    };\n  },\n  computed: {\n    // 获取不在任何文件夹中的书籍\n  },\n  methods: {\n    getGridPositionClass(index) {\n      // 根据索引返回对应的区域类名\n      const positions = ['top-left', 'top-right', 'bottom-left', 'bottom-right'];\n      return positions[index % 4]; // 循环分配\n    },\n    get_message() {\n      let url = \"http://127.0.0.1:5000/weread/info\";\n      fetch(url, {\n        method: 'POST',\n        credentials: 'include' // 或者 POST 等其他请求方法，按需调整\n      }).then(response => response.json()).then(jsonData => {\n        this.data = jsonData;\n        console.log(this.data);\n        this.booksNotInFolders();\n      }).catch(error => console.error(\"获取用户信息时出现 bug \" + error));\n    },\n    // 获取某个文件夹中包含的书籍\n    getBooksInFolder(bookIds) {\n      return this.data.books.filter(book => bookIds.includes(book.bookId));\n    },\n    booksNotInFolders() {\n      return this.data?.books?.filter(book => !this.data.archive.some(folder => folder.bookIds.includes(book.bookId))) || [];\n    },\n    truncatedTitle(title) {\n      if (title.length > 15) title = title.substring(0, 15) + '...';\n      return title;\n    }\n  }\n};","map":{"version":3,"names":["Cookies","mounted","set","expires","data","computed","methods","getGridPositionClass","index","positions","get_message","url","fetch","method","credentials","then","response","json","jsonData","console","log","booksNotInFolders","catch","error","getBooksInFolder","bookIds","books","filter","book","includes","bookId","archive","some","folder","truncatedTitle","title","length","substring"],"sources":["/Users/dongliwei/Desktop/文档/CQUPT 课程/毕业设计/Front-end/front-end/src/components/third-content/third_weread.vue"],"sourcesContent":["<style scoped>\n.all {\n    margin-left: 250px;\n}\n\n.folder-container {\n    padding: 16px;\n}\n\n.thumbnail-grid {\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    /* 两列布局 */\n    grid-template-rows: 1fr 1fr;\n    /* 两行布局 */\n    gap: 8px;\n    /* 图片之间的间距 */\n    width: 200px;\n    /* 缩略图的总宽度 */\n    height: 200px;\n    /* 缩略图的总高度 */\n    position: relative;\n    overflow: hidden;\n}\n\n.grid-item {\n    width: 100%;\n    height: 100%;\n    position: relative;\n}\n\n.grid-item img {\n    width: 100%;\n    height: 100%;\n    object-fit: cover;\n}\n\n.grid-item.top-left {\n    grid-area: 1 / 1;\n    /* 第一行第一列 */\n}\n\n.grid-item.top-right {\n    grid-area: 1 / 2;\n    /* 第一行第二列 */\n}\n\n.grid-item.bottom-left {\n    grid-area: 2 / 1;\n    /* 第二行第一列 */\n}\n\n.grid-item.bottom-right {\n    grid-area: 2 / 2;\n    /* 第二行第二列 */\n}\n\n.book-grid {\n    display: flex;\n    flex-wrap: wrap;\n    gap: 16px;\n    /* 卡片之间的间距 */\n    justify-content: flex-start;\n    /* 从左侧开始排列 */\n}\n\n.card {\n    box-sizing: border-box;\n    width: calc((100% - 4 * 16px) / 5);\n    /* 计算每个卡片的宽度，减去间距 */\n    backdrop-filter: blur(6px);\n    justify-content: center;\n    border-radius: 17px;\n    text-align: center;\n    cursor: pointer;\n    transition: all 0.5s;\n    margin-bottom: 16px;\n    /* 垂直方向的间距 */\n}\n\n.card-content {\n    justify-content: center;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    width: 100%;\n}\n\n.card-image {\n    border-radius: 17px;\n    object-fit: cover;\n    width: 128px;\n    height: 185px;\n    /* 可以根据需要调整 */\n}\n\n.card-title {\n    justify-content: center;\n    margin-top: 8px;\n    width: 100%;\n    word-wrap: break-word;\n    text-align: center;\n    padding: 0 5px;\n    height: 60px;\n}\n\n.card:hover {\n\n    transform: scale(1.05);\n}\n</style>\n\n<template>\n    <div class=\"all\">\n        <button @click=\"get_message()\">\n            获取\n        </button>\n        <!-- 渲染文件夹 -->\n        <div v-if=\"getBooksInFolder(folder.bookIds).length > 0\" class=\"folder-container\">\n            <div class=\"thumbnail-grid\">\n                <div v-for=\"(book, index) in getBooksInFolder(folder.bookIds)\" :key=\"book.bookId\"\n                    :class=\"getGridPositionClass(index)\" class=\"grid-item\">\n                    <img :src=\"book.cover\" :alt=\"book.title\" />\n                </div>\n            </div>\n            <h3>{{ folder.name }}</h3>\n            <hr />\n        </div>\n\n        <div class=\"book-grid\">\n            <div v-for=\"book in booksNotInFolders()\" :key=\"book.bookId\" class=\"card\">\n                <div class=\"card-content\">\n                    <img :src=\"book.cover\" class=\"card-image\">\n                    <div class=\"card-title\">{{ truncatedTitle(book.title) }}</div>\n                </div>\n            </div>\n        </div>\n    </div>\n</template>\n<script>\nimport Cookies from 'js-cookie';\nexport default {\n    mounted() {\n        Cookies.set('skey', 'nOX_gv0S', { expires: 7 });\n        Cookies.set('vid', '442726869', { expires: 7 });\n    },\n    data() {\n        return {\n            data: {}\n        }\n    },\n    computed: {\n        // 获取不在任何文件夹中的书籍\n\n    },\n    methods: {\n        getGridPositionClass(index) {\n            // 根据索引返回对应的区域类名\n            const positions = ['top-left', 'top-right', 'bottom-left', 'bottom-right'];\n            return positions[index % 4]; // 循环分配\n        },\n        get_message() {\n            let url = \"http://127.0.0.1:5000/weread/info\"\n            fetch(url, {\n                method: 'POST',\n                credentials: 'include' // 或者 POST 等其他请求方法，按需调整\n            }).then(response => response.json())\n                .then(jsonData => {\n                    this.data = jsonData\n                    console.log(this.data)\n                    this.booksNotInFolders()\n                })\n                .catch(error => console.error(\"获取用户信息时出现 bug \" + error));\n\n\n        },\n        // 获取某个文件夹中包含的书籍\n        getBooksInFolder(bookIds) {\n            return this.data.books.filter(book => bookIds.includes(book.bookId));\n        },\n        booksNotInFolders() {\n            return this.data?.books?.filter(book =>\n                !this.data.archive.some(folder => folder.bookIds.includes(book.bookId))\n            ) || [];\n        },\n        truncatedTitle(title) {\n            if (title.length > 15) title = title.substring(0, 15) + '...'\n            return title;\n        }\n    },\n};\n</script>"],"mappings":";;;AA4IA,OAAOA,OAAM,MAAO,WAAW;AAC/B,eAAe;EACXC,OAAOA,CAAA,EAAG;IACND,OAAO,CAACE,GAAG,CAAC,MAAM,EAAE,UAAU,EAAE;MAAEC,OAAO,EAAE;IAAE,CAAC,CAAC;IAC/CH,OAAO,CAACE,GAAG,CAAC,KAAK,EAAE,WAAW,EAAE;MAAEC,OAAO,EAAE;IAAE,CAAC,CAAC;EACnD,CAAC;EACDC,IAAIA,CAAA,EAAG;IACH,OAAO;MACHA,IAAI,EAAE,CAAC;IACX;EACJ,CAAC;EACDC,QAAQ,EAAE;IACN;EAAA,CAEH;EACDC,OAAO,EAAE;IACLC,oBAAoBA,CAACC,KAAK,EAAE;MACxB;MACA,MAAMC,SAAQ,GAAI,CAAC,UAAU,EAAE,WAAW,EAAE,aAAa,EAAE,cAAc,CAAC;MAC1E,OAAOA,SAAS,CAACD,KAAI,GAAI,CAAC,CAAC,EAAE;IACjC,CAAC;IACDE,WAAWA,CAAA,EAAG;MACV,IAAIC,GAAE,GAAI,mCAAkC;MAC5CC,KAAK,CAACD,GAAG,EAAE;QACPE,MAAM,EAAE,MAAM;QACdC,WAAW,EAAE,SAAQ,CAAE;MAC3B,CAAC,CAAC,CAACC,IAAI,CAACC,QAAO,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,EAC9BF,IAAI,CAACG,QAAO,IAAK;QACd,IAAI,CAACd,IAAG,GAAIc,QAAO;QACnBC,OAAO,CAACC,GAAG,CAAC,IAAI,CAAChB,IAAI;QACrB,IAAI,CAACiB,iBAAiB,CAAC;MAC3B,CAAC,EACAC,KAAK,CAACC,KAAI,IAAKJ,OAAO,CAACI,KAAK,CAAC,gBAAe,GAAIA,KAAK,CAAC,CAAC;IAGhE,CAAC;IACD;IACAC,gBAAgBA,CAACC,OAAO,EAAE;MACtB,OAAO,IAAI,CAACrB,IAAI,CAACsB,KAAK,CAACC,MAAM,CAACC,IAAG,IAAKH,OAAO,CAACI,QAAQ,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC;IACxE,CAAC;IACDT,iBAAiBA,CAAA,EAAG;MAChB,OAAO,IAAI,CAACjB,IAAI,EAAEsB,KAAK,EAAEC,MAAM,CAACC,IAAG,IAC/B,CAAC,IAAI,CAACxB,IAAI,CAAC2B,OAAO,CAACC,IAAI,CAACC,MAAK,IAAKA,MAAM,CAACR,OAAO,CAACI,QAAQ,CAACD,IAAI,CAACE,MAAM,CAAC,CAC1E,KAAK,EAAE;IACX,CAAC;IACDI,cAAcA,CAACC,KAAK,EAAE;MAClB,IAAIA,KAAK,CAACC,MAAK,GAAI,EAAE,EAAED,KAAI,GAAIA,KAAK,CAACE,SAAS,CAAC,CAAC,EAAE,EAAE,IAAI,KAAI;MAC5D,OAAOF,KAAK;IAChB;EACJ;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}