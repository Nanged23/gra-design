{"ast":null,"code":"import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, normalizeClass as _normalizeClass } from \"vue\";\nconst _hoisted_1 = {\n  class: \"notification-center\"\n};\nconst _hoisted_2 = {\n  key: 0,\n  class: \"notification-badge\"\n};\nconst _hoisted_3 = {\n  key: 0,\n  class: \"notification-panel\"\n};\nconst _hoisted_4 = {\n  class: \"notification-list\"\n};\nconst _hoisted_5 = {\n  class: \"notification-content\"\n};\nconst _hoisted_6 = {\n  class: \"notification-time\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.toggleNotifications && $options.toggleNotifications(...args)),\n    class: \"notification-btn\"\n  }, [_cache[1] || (_cache[1] = _createElementVNode(\"i\", {\n    class: \"fas fa-bell\"\n  }, null, -1 /* HOISTED */)), $options.unreadCount ? (_openBlock(), _createElementBlock(\"span\", _hoisted_2, _toDisplayString($options.unreadCount), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true)]), $data.showNotifications ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, [_cache[2] || (_cache[2] = _createElementVNode(\"h3\", null, \"通知\", -1 /* HOISTED */)), _createElementVNode(\"ul\", _hoisted_4, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.notifications, notification => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: notification.id,\n      class: \"notification-item\"\n    }, [_createElementVNode(\"span\", {\n      class: _normalizeClass([\"notification-icon\", notification.type])\n    }, [_createElementVNode(\"i\", {\n      class: _normalizeClass($options.getIconClass(notification.type))\n    }, null, 2 /* CLASS */)], 2 /* CLASS */), _createElementVNode(\"div\", _hoisted_5, [_createElementVNode(\"p\", null, _toDisplayString(notification.message), 1 /* TEXT */), _createElementVNode(\"span\", _hoisted_6, _toDisplayString($options.formatTime(notification.time)), 1 /* TEXT */)])]);\n  }), 128 /* KEYED_FRAGMENT */))])])) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["class","key","_createElementBlock","_hoisted_1","_createElementVNode","onClick","_cache","args","$options","toggleNotifications","unreadCount","_hoisted_2","_toDisplayString","_createCommentVNode","$data","showNotifications","_hoisted_3","_hoisted_4","_Fragment","_renderList","notifications","notification","id","_normalizeClass","type","getIconClass","_hoisted_5","message","_hoisted_6","formatTime","time"],"sources":["/Users/dongliwei/Desktop/文档/CQUPT 课程/毕业设计/Front-end/front-end/src/components/HelloWorld.vue"],"sourcesContent":["<template>\n  <div class=\"notification-center\">\n    <button @click=\"toggleNotifications\" class=\"notification-btn\">\n      <i class=\"fas fa-bell\"></i>\n      <span v-if=\"unreadCount\" class=\"notification-badge\">{{ unreadCount }}</span>\n    </button>\n    <div v-if=\"showNotifications\" class=\"notification-panel\">\n      <h3>通知</h3>\n      <ul class=\"notification-list\">\n        <li v-for=\"notification in notifications\" :key=\"notification.id\" class=\"notification-item\">\n          <span class=\"notification-icon\" :class=\"notification.type\">\n            <i :class=\"getIconClass(notification.type)\"></i>\n          </span>\n          <div class=\"notification-content\">\n            <p>{{ notification.message }}</p>\n            <span class=\"notification-time\">{{ formatTime(notification.time) }}</span>\n          </div>\n        </li>\n      </ul>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      showNotifications: false,\n      notifications: [\n        { id: 1, type: 'todo', message: 'TODO \"完成项目\" 即将到期', time: new Date() },\n        { id: 2, type: 'review', message: '月度复盘提醒', time: new Date() }\n      ]\n    };\n  },\n  computed: {\n    unreadCount() {\n      return this.notifications.length;\n    }\n  },\n  methods: {\n    toggleNotifications() {\n      this.showNotifications = !this.showNotifications;\n    },\n    getIconClass(type) {\n      switch (type) {\n        case 'todo':\n          return 'fas fa-tasks';\n        case 'review':\n          return 'fas fa-calendar-check';\n        default:\n          return 'fas fa-info-circle';\n      }\n    },\n    formatTime(time) {\n      return new Date(time).toLocaleString();\n    }\n  }\n};\n</script>\n\n<style scoped>\n.notification-center {\n  position: relative;\n}\n\n.notification-btn {\n  background: none;\n  border: none;\n  cursor: pointer;\n  font-size: 1.2rem;\n}\n\n.notification-badge {\n  position: absolute;\n  top: -5px;\n  right: -5px;\n  background-color: #ff4d4f;\n  color: #ffffff;\n  border-radius: 50%;\n  padding: 2px 6px;\n  font-size: 0.8rem;\n}\n\n.notification-panel {\n  position: absolute;\n  top: 100%;\n  right: 0;\n  width: 300px;\n  background-color: #ffffff;\n  border: 1px solid #e0e0e0;\n  border-radius: 4px;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n  z-index: 10;\n}\n\n.notification-list {\n  list-style-type: none;\n  padding: 0;\n  margin: 0;\n}\n\n.notification-item {\n  display: flex;\n  align-items: start;\n  padding: 1rem;\n  border-bottom: 1px solid #e0e0e0;\n}\n\n.notification-icon {\n  margin-right: 1rem;\n  font-size: 1.2rem;\n}\n\n.notification-content p {\n  margin: 0 0 0.5rem 0;\n}\n\n.notification-time {\n  font-size: 0.8rem;\n  color: #888;\n}\n</style>"],"mappings":";;EACOA,KAAK,EAAC;AAAqB;;EADlCC,GAAA;EAI+BD,KAAK,EAAC;;;EAJrCC,GAAA;EAMkCD,KAAK,EAAC;;;EAE9BA,KAAK,EAAC;AAAmB;;EAKpBA,KAAK,EAAC;AAAsB;;EAEzBA,KAAK,EAAC;AAAmB;;uBAdzCE,mBAAA,CAmBM,OAnBNC,UAmBM,GAlBJC,mBAAA,CAGS;IAHAC,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAC,mBAAA,IAAAD,QAAA,CAAAC,mBAAA,IAAAF,IAAA,CAAmB;IAAEP,KAAK,EAAC;gCACzCI,mBAAA,CAA2B;IAAxBJ,KAAK,EAAC;EAAa,6BACVQ,QAAA,CAAAE,WAAW,I,cAAvBR,mBAAA,CAA4E,QAA5ES,UAA4E,EAAAC,gBAAA,CAArBJ,QAAA,CAAAE,WAAW,oBAJxEG,mBAAA,e,GAMeC,KAAA,CAAAC,iBAAiB,I,cAA5Bb,mBAAA,CAaM,OAbNc,UAaM,G,0BAZJZ,mBAAA,CAAW,YAAP,IAAE,sBACNA,mBAAA,CAUK,MAVLa,UAUK,I,kBATHf,mBAAA,CAQKgB,SAAA,QAjBbC,WAAA,CASmCL,KAAA,CAAAM,aAAa,EAA7BC,YAAY;yBAAvBnB,mBAAA,CAQK;MARsCD,GAAG,EAAEoB,YAAY,CAACC,EAAE;MAAEtB,KAAK,EAAC;QACrEI,mBAAA,CAEO;MAFDJ,KAAK,EAVrBuB,eAAA,EAUsB,mBAAmB,EAASF,YAAY,CAACG,IAAI;QACvDpB,mBAAA,CAAgD;MAA5CJ,KAAK,EAXrBuB,eAAA,CAWuBf,QAAA,CAAAiB,YAAY,CAACJ,YAAY,CAACG,IAAI;8CAE3CpB,mBAAA,CAGM,OAHNsB,UAGM,GAFJtB,mBAAA,CAAiC,WAAAQ,gBAAA,CAA3BS,YAAY,CAACM,OAAO,kBAC1BvB,mBAAA,CAA0E,QAA1EwB,UAA0E,EAAAhB,gBAAA,CAAvCJ,QAAA,CAAAqB,UAAU,CAACR,YAAY,CAACS,IAAI,kB;wCAf3EjB,mBAAA,e","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}