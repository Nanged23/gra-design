{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, normalizeClass as _normalizeClass, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"todo-list\"\n};\nconst _hoisted_2 = {\n  class: \"todo-controls\"\n};\nconst _hoisted_3 = {\n  class: \"todo-items\"\n};\nconst _hoisted_4 = [\"checked\", \"onChange\"];\nconst _hoisted_5 = {\n  class: \"todo-deadline\"\n};\nexport function render(_ctx, _cache) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_cache[2] || (_cache[2] = _createElementVNode(\"h1\", {\n    class: \"page-title\"\n  }, \"TODO 列表\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"button\", {\n    class: \"add-todo-btn\",\n    onClick: _cache[0] || (_cache[0] = (...args) => _ctx.showAddTodoModal && _ctx.showAddTodoModal(...args))\n  }, \"添加 TODO\"), _createElementVNode(\"button\", {\n    class: \"view-calendar-btn\",\n    onClick: _cache[1] || (_cache[1] = (...args) => _ctx.showCalendarView && _ctx.showCalendarView(...args))\n  }, \"日历视图\")]), _createElementVNode(\"ul\", _hoisted_3, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.todos, todo => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: todo.id,\n      class: \"todo-item\"\n    }, [_createElementVNode(\"input\", {\n      type: \"checkbox\",\n      checked: todo.completed,\n      onChange: $event => _ctx.toggleTodo(todo.id)\n    }, null, 40 /* PROPS, NEED_HYDRATION */, _hoisted_4), _createElementVNode(\"span\", {\n      class: _normalizeClass({\n        'completed': todo.completed\n      })\n    }, _toDisplayString(todo.title), 3 /* TEXT, CLASS */), _createElementVNode(\"span\", _hoisted_5, \"截止日期: \" + _toDisplayString(todo.deadline), 1 /* TEXT */), _createElementVNode(\"span\", {\n      class: _normalizeClass([\"todo-priority\", _ctx.priorityClass(todo.priority)])\n    }, _toDisplayString(todo.priority), 3 /* TEXT, CLASS */)]);\n  }), 128 /* KEYED_FRAGMENT */))]), _createCommentVNode(\" 添加 TODO 的模态框 \"), _createCommentVNode(\" 日历视图组件 \")]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","onClick","_cache","args","_ctx","showAddTodoModal","showCalendarView","_hoisted_3","_Fragment","_renderList","todos","todo","key","id","type","checked","completed","onChange","$event","toggleTodo","_hoisted_4","_normalizeClass","title","_hoisted_5","_toDisplayString","deadline","priorityClass","priority","_createCommentVNode"],"sources":["/Users/dongliwei/Desktop/文档/CQUPT 课程/毕业设计/Front-end/front-end/src/components/HelloWorld.vue"],"sourcesContent":["<template>\n  <div class=\"todo-list\">\n    <h1 class=\"page-title\">TODO 列表</h1>\n    <div class=\"todo-controls\">\n      <button class=\"add-todo-btn\" @click=\"showAddTodoModal\">添加 TODO</button>\n      <button class=\"view-calendar-btn\" @click=\"showCalendarView\">日历视图</button>\n    </div>\n    <ul class=\"todo-items\">\n      <li v-for=\"todo in todos\" :key=\"todo.id\" class=\"todo-item\">\n        <input type=\"checkbox\" :checked=\"todo.completed\" @change=\"toggleTodo(todo.id)\">\n        <span :class=\"{ 'completed': todo.completed }\">{{ todo.title }}</span>\n        <span class=\"todo-deadline\">截止日期: {{ todo.deadline }}</span>\n        <span class=\"todo-priority\" :class=\"priorityClass(todo.priority)\">{{ todo.priority }}</span>\n      </li>\n    </ul>\n    <!-- 添加 TODO 的模态框 -->\n    <!-- 日历视图组件 -->\n  </div>\n</template>\n\n<style scoped>\n.todo-list {\n  max-width: 800px;\n  margin: 0 auto;\n}\n\n.todo-controls {\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: 1rem;\n}\n\n.add-todo-btn,\n.view-calendar-btn {\n  padding: 0.5rem 1rem;\n  background-color: #007bff;\n  color: #ffffff;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n}\n\n.todo-items {\n  list-style-type: none;\n  padding: 0;\n}\n\n.todo-item {\n  display: flex;\n  align-items: center;\n  padding: 1rem;\n  background-color: #ffffff;\n  margin-bottom: 0.5rem;\n  border-radius: 4px;\n  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);\n}\n\n.todo-item .completed {\n  text-decoration: line-through;\n  color: #888;\n}\n\n.todo-deadline {\n  margin-left: auto;\n  font-size: 0.9rem;\n  color: #666;\n}\n\n.todo-priority {\n  margin-left: 1rem;\n  padding: 0.2rem 0.5rem;\n  border-radius: 4px;\n  font-size: 0.8rem;\n}\n\n.priority-high {\n  background-color: #ff4d4f;\n  color: #ffffff;\n}\n\n.priority-medium {\n  background-color: #faad14;\n  color: #ffffff;\n}\n\n.priority-low {\n  background-color: #52c41a;\n  color: #ffffff;\n}\n</style>"],"mappings":";;EACOA,KAAK,EAAC;AAAW;;EAEfA,KAAK,EAAC;AAAe;;EAItBA,KAAK,EAAC;AAAY;mBAP1B;;EAWcA,KAAK,EAAC;AAAe;;uBAVjCC,mBAAA,CAgBM,OAhBNC,UAgBM,G,0BAfJC,mBAAA,CAAmC;IAA/BH,KAAK,EAAC;EAAY,GAAC,SAAO,sBAC9BG,mBAAA,CAGM,OAHNC,UAGM,GAFJD,mBAAA,CAAuE;IAA/DH,KAAK,EAAC,cAAc;IAAEK,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,IAAA,CAAAC,gBAAA,IAAAD,IAAA,CAAAC,gBAAA,IAAAF,IAAA,CAAgB;KAAE,SAAO,GAC9DJ,mBAAA,CAAyE;IAAjEH,KAAK,EAAC,mBAAmB;IAAEK,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,IAAA,CAAAE,gBAAA,IAAAF,IAAA,CAAAE,gBAAA,IAAAH,IAAA,CAAgB;KAAE,MAAI,E,GAElEJ,mBAAA,CAOK,MAPLQ,UAOK,I,kBANHV,mBAAA,CAKKW,SAAA,QAbXC,WAAA,CAQyBL,IAAA,CAAAM,KAAK,EAAbC,IAAI;yBAAfd,mBAAA,CAKK;MALsBe,GAAG,EAAED,IAAI,CAACE,EAAE;MAAEjB,KAAK,EAAC;QAC7CG,mBAAA,CAA+E;MAAxEe,IAAI,EAAC,UAAU;MAAEC,OAAO,EAAEJ,IAAI,CAACK,SAAS;MAAGC,QAAM,EAAAC,MAAA,IAAEd,IAAA,CAAAe,UAAU,CAACR,IAAI,CAACE,EAAE;6CATpFO,UAAA,GAUQrB,mBAAA,CAAsE;MAA/DH,KAAK,EAVpByB,eAAA;QAAA,aAUqCV,IAAI,CAACK;MAAS;wBAAOL,IAAI,CAACW,KAAK,yBAC5DvB,mBAAA,CAA4D,QAA5DwB,UAA4D,EAAhC,QAAM,GAAAC,gBAAA,CAAGb,IAAI,CAACc,QAAQ,kBAClD1B,mBAAA,CAA4F;MAAtFH,KAAK,EAZnByB,eAAA,EAYoB,eAAe,EAASjB,IAAA,CAAAsB,aAAa,CAACf,IAAI,CAACgB,QAAQ;wBAAMhB,IAAI,CAACgB,QAAQ,wB;oCAGtFC,mBAAA,kBAAqB,EACrBA,mBAAA,YAAe,C","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}