{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport * as echarts from 'echarts';\nexport default {\n  mounted() {\n    this.initHeatmapChart();\n  },\n  methods: {\n    initHeatmapChart() {\n      const chart = echarts.init(this.$refs.heatmapChart);\n      const option = {\n        title: {\n          top: 30,\n          left: 'center',\n          text: '使用情况热力图'\n        },\n        tooltip: {},\n        visualMap: {\n          min: 0,\n          max: 10,\n          type: 'piecewise',\n          orient: 'horizontal',\n          left: 'center',\n          top: 65\n        },\n        calendar: {\n          top: 120,\n          left: 30,\n          right: 30,\n          cellSize: ['auto', 13],\n          range: '2023',\n          itemStyle: {\n            borderWidth: 0.5\n          },\n          yearLabel: {\n            show: false\n          }\n        },\n        series: {\n          type: 'heatmap',\n          coordinateSystem: 'calendar',\n          data: this.getVirtualData('2023')\n        }\n      };\n      chart.setOption(option);\n    },\n    getVirtualData(year) {\n      const date = +echarts.time.parse(year + '-01-01');\n      const end = +echarts.time.parse(+year + 1 + '-01-01');\n      const dayTime = 3600 * 24 * 1000;\n      const data = [];\n      for (let time = date; time < end; time += dayTime) {\n        data.push([echarts.time.format(time, '{yyyy}-{MM}-{dd}', false), Math.floor(Math.random() * 10)]);\n      }\n      return data;\n    }\n  }\n};","map":{"version":3,"names":["echarts","mounted","initHeatmapChart","methods","chart","init","$refs","heatmapChart","option","title","top","left","text","tooltip","visualMap","min","max","type","orient","calendar","right","cellSize","range","itemStyle","borderWidth","yearLabel","show","series","coordinateSystem","data","getVirtualData","setOption","year","date","time","parse","end","dayTime","push","format","Math","floor","random"],"sources":["/Users/dongliwei/Desktop/文档/CQUPT 课程/毕业设计/Front-end/front-end/src/components/HelloWorld.vue"],"sourcesContent":["<template>\n  <div class=\"data-monitoring\">\n    <h1 class=\"page-title\">数据监控</h1>\n    <div class=\"chart-container\">\n      <div ref=\"heatmapChart\" class=\"chart\"></div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport * as echarts from 'echarts';\n\nexport default {\n  mounted() {\n    this.initHeatmapChart();\n  },\n  methods: {\n    initHeatmapChart() {\n      const chart = echarts.init(this.$refs.heatmapChart);\n      const option = {\n        title: {\n          top: 30,\n          left: 'center',\n          text: '使用情况热力图'\n        },\n        tooltip: {},\n        visualMap: {\n          min: 0,\n          max: 10,\n          type: 'piecewise',\n          orient: 'horizontal',\n          left: 'center',\n          top: 65\n        },\n        calendar: {\n          top: 120,\n          left: 30,\n          right: 30,\n          cellSize: ['auto', 13],\n          range: '2023',\n          itemStyle: {\n            borderWidth: 0.5\n          },\n          yearLabel: { show: false }\n        },\n        series: {\n          type: 'heatmap',\n          coordinateSystem: 'calendar',\n          data: this.getVirtualData('2023')\n        }\n      };\n      chart.setOption(option);\n    },\n    getVirtualData(year) {\n      const date = +echarts.time.parse(year + '-01-01');\n      const end = +echarts.time.parse(+year + 1 + '-01-01');\n      const dayTime = 3600 * 24 * 1000;\n      const data = [];\n      for (let time = date; time < end; time += dayTime) {\n        data.push([\n          echarts.time.format(time, '{yyyy}-{MM}-{dd}', false),\n          Math.floor(Math.random() * 10)\n        ]);\n      }\n      return data;\n    }\n  }\n};\n</script>\n\n<style scoped>\n.data-monitoring {\n  max-width: 1000px;\n  margin: 0 auto;\n}\n\n.chart-container {\n  background-color: #ffffff;\n  padding: 1rem;\n  border-radius: 8px;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n}\n\n.chart {\n  height: 500px;\n}\n</style>"],"mappings":";AAUA,OAAO,KAAKA,OAAM,MAAO,SAAS;AAElC,eAAe;EACbC,OAAOA,CAAA,EAAG;IACR,IAAI,CAACC,gBAAgB,CAAC,CAAC;EACzB,CAAC;EACDC,OAAO,EAAE;IACPD,gBAAgBA,CAAA,EAAG;MACjB,MAAME,KAAI,GAAIJ,OAAO,CAACK,IAAI,CAAC,IAAI,CAACC,KAAK,CAACC,YAAY,CAAC;MACnD,MAAMC,MAAK,GAAI;QACbC,KAAK,EAAE;UACLC,GAAG,EAAE,EAAE;UACPC,IAAI,EAAE,QAAQ;UACdC,IAAI,EAAE;QACR,CAAC;QACDC,OAAO,EAAE,CAAC,CAAC;QACXC,SAAS,EAAE;UACTC,GAAG,EAAE,CAAC;UACNC,GAAG,EAAE,EAAE;UACPC,IAAI,EAAE,WAAW;UACjBC,MAAM,EAAE,YAAY;UACpBP,IAAI,EAAE,QAAQ;UACdD,GAAG,EAAE;QACP,CAAC;QACDS,QAAQ,EAAE;UACRT,GAAG,EAAE,GAAG;UACRC,IAAI,EAAE,EAAE;UACRS,KAAK,EAAE,EAAE;UACTC,QAAQ,EAAE,CAAC,MAAM,EAAE,EAAE,CAAC;UACtBC,KAAK,EAAE,MAAM;UACbC,SAAS,EAAE;YACTC,WAAW,EAAE;UACf,CAAC;UACDC,SAAS,EAAE;YAAEC,IAAI,EAAE;UAAM;QAC3B,CAAC;QACDC,MAAM,EAAE;UACNV,IAAI,EAAE,SAAS;UACfW,gBAAgB,EAAE,UAAU;UAC5BC,IAAI,EAAE,IAAI,CAACC,cAAc,CAAC,MAAM;QAClC;MACF,CAAC;MACD1B,KAAK,CAAC2B,SAAS,CAACvB,MAAM,CAAC;IACzB,CAAC;IACDsB,cAAcA,CAACE,IAAI,EAAE;MACnB,MAAMC,IAAG,GAAI,CAACjC,OAAO,CAACkC,IAAI,CAACC,KAAK,CAACH,IAAG,GAAI,QAAQ,CAAC;MACjD,MAAMI,GAAE,GAAI,CAACpC,OAAO,CAACkC,IAAI,CAACC,KAAK,CAAC,CAACH,IAAG,GAAI,IAAI,QAAQ,CAAC;MACrD,MAAMK,OAAM,GAAI,IAAG,GAAI,EAAC,GAAI,IAAI;MAChC,MAAMR,IAAG,GAAI,EAAE;MACf,KAAK,IAAIK,IAAG,GAAID,IAAI,EAAEC,IAAG,GAAIE,GAAG,EAAEF,IAAG,IAAKG,OAAO,EAAE;QACjDR,IAAI,CAACS,IAAI,CAAC,CACRtC,OAAO,CAACkC,IAAI,CAACK,MAAM,CAACL,IAAI,EAAE,kBAAkB,EAAE,KAAK,CAAC,EACpDM,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,IAAI,EAAE,EAC9B,CAAC;MACJ;MACA,OAAOb,IAAI;IACb;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}