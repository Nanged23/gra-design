{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport AuthContainer from './AuthContainer.vue';\nexport default {\n  components: {\n    AuthContainer\n  },\n  data() {\n    return {\n      email: '',\n      password: '',\n      emailError: '',\n      passwordError: ''\n    };\n  },\n  methods: {\n    gotoRegister() {\n      this.$router.push('/register');\n    },\n    validateEmail() {\n      const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n      if (this.email && !emailRegex.test(this.email)) {\n        this.emailError = '邮箱不符合规范';\n      } else {\n        this.emailError = '';\n      }\n    },\n    validatePassword() {\n      const hasUpperCase = /[A-Z]/.test(this.password);\n      const hasLowerCase = /[a-z]/.test(this.password);\n      if (this.password && (!hasUpperCase || !hasLowerCase)) {\n        this.passwordError = '密码必须包含大小写字母';\n      } else {\n        this.passwordError = '';\n      }\n    },\n    handleSubmit() {\n      this.validateEmail();\n      this.validatePassword();\n      if (!this.emailError && !this.passwordError) {\n        console.log('Login attempted:', {\n          email: this.email\n        });\n      }\n    }\n  }\n};","map":{"version":3,"names":["AuthContainer","components","data","email","password","emailError","passwordError","methods","gotoRegister","$router","push","validateEmail","emailRegex","test","validatePassword","hasUpperCase","hasLowerCase","handleSubmit","console","log"],"sources":["/Users/dongliwei/Desktop/文档/CQUPT 课程/毕业设计/Front-end/front-end/src/components/init/login.vue"],"sourcesContent":["<template>\n  <auth-container :isRegister=\"false\">\n    <div class=\"login-form\">\n      <h2>Sign in to Diprella</h2>\n      <div class=\"social-login\">\n        <button class=\"social-btn\"><i class=\"fab fa-facebook-f\"></i></button>\n        <button class=\"social-btn\"><i class=\"fab fa-google\"></i></button>\n        <button class=\"social-btn\"><i class=\"fab fa-linkedin-in\"></i></button>\n      </div>\n      <p class=\"divider\">or use your email account:</p>\n      <form @submit.prevent=\"handleSubmit\">\n        <!-- Email Input -->\n        <div class=\"form-group\">\n          <div class=\"input-wrapper\">\n            <input type=\"email\" v-model=\"email\" placeholder=\"邮箱\" @blur=\"validateEmail\"\n              :class=\"{ error: emailError }\">\n            <i class=\"fas fa-envelope\"></i>\n          </div>\n          <span v-if=\"emailError\" class=\"error-message\">{{ emailError }}</span>\n        </div>\n\n        <!-- Password Input -->\n        <div class=\"form-group\">\n          <div class=\"input-wrapper\">\n            <input type=\"password\" v-model=\"password\" placeholder=\"密码\" @blur=\"validatePassword\"\n              :class=\"{ error: passwordError }\">\n            <i class=\"fas fa-lock\"></i>\n          </div>\n          <span v-if=\"passwordError\" class=\"error-message\">{{ passwordError }}</span>\n        </div>\n\n        <div class=\"forgot-password\">\n          <a href=\"#\">Forgot your password?</a>\n        </div>\n\n        <button type=\"submit\" class=\"submit-btn\">SIGN IN</button>\n      </form>\n      \n      <div class=\"register-link\">\n        <p>Don't have an account? <a href=\"#\" @click.prevent=\"gotoRegister\">Sign Up</a></p>\n      </div>\n    </div>\n  </auth-container>\n</template>\n\n<script>\nimport AuthContainer from './AuthContainer.vue'\n\nexport default {\n  components: {\n    AuthContainer\n  },\n  data() {\n    return {\n      email: '',\n      password: '',\n      emailError: '',\n      passwordError: ''\n    }\n  },\n  methods: {\n    gotoRegister() {\n      this.$router.push('/register')\n    },\n    validateEmail() {\n      const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/\n      if (this.email && !emailRegex.test(this.email)) {\n        this.emailError = '邮箱不符合规范'\n      } else {\n        this.emailError = ''\n      }\n    },\n    validatePassword() {\n      const hasUpperCase = /[A-Z]/.test(this.password)\n      const hasLowerCase = /[a-z]/.test(this.password)\n\n      if (this.password && (!hasUpperCase || !hasLowerCase)) {\n        this.passwordError = '密码必须包含大小写字母'\n      } else {\n        this.passwordError = ''\n      }\n    },\n    handleSubmit() {\n      this.validateEmail()\n      this.validatePassword()\n\n      if (!this.emailError && !this.passwordError) {\n        console.log('Login attempted:', { email: this.email })\n      }\n    }\n  }\n}\n</script>\n\n<style scoped>\n.login-form {\n  text-align: center;\n}\n\nh2 {\n  color: #333;\n  margin-bottom: 30px;\n  font-size: 24px;\n}\n\n.social-login {\n  display: flex;\n  justify-content: center;\n  gap: 20px;\n  margin-bottom: 20px;\n}\n\n.social-btn {\n  width: 40px;\n  height: 40px;\n  border-radius: 50%;\n  border: 1px solid #ddd;\n  background: white;\n  cursor: pointer;\n  transition: all 0.3s ease;\n}\n\n.social-btn:hover {\n  background: #f5f5f5;\n}\n\n.divider {\n  color: #666;\n  margin: 20px 0;\n  font-size: 14px;\n}\n\n.form-group {\n  margin-bottom: 20px;\n}\n\n.input-wrapper {\n  position: relative;\n}\n\ninput {\n  width: 100%;\n  padding: 12px 40px 12px 15px;\n  border: 1px solid #ddd;\n  border-radius: 8px;\n  font-size: 14px;\n  transition: border-color 0.3s ease;\n}\n\ninput:focus {\n  border-color: var(--primary-color);\n  outline: none;\n}\n\n.input-wrapper i {\n  position: absolute;\n  right: 15px;\n  top: 50%;\n  transform: translateY(-50%);\n  color: #999;\n}\n\n.error {\n  border-color: #ff4d4f;\n}\n\n.error-message {\n  color: #ff4d4f;\n  font-size: 12px;\n  margin-top: 5px;\n  display: block;\n}\n\n.forgot-password {\n  text-align: right;\n  margin: 10px 0 20px;\n}\n\n.forgot-password a {\n  color: #666;\n  font-size: 14px;\n  text-decoration: none;\n}\n\n.submit-btn {\n  width: 100%;\n  padding: 12px;\n  background: var(--primary-color);\n  color: white;\n  border: none;\n  border-radius: 8px;\n  font-size: 16px;\n  cursor: pointer;\n  transition: background 0.3s ease;\n}\n\n.submit-btn:hover {\n  background: var(--primary-dark);\n}\n\n.register-link {\n  margin-top: 20px;\n  color: #666;\n  font-size: 14px;\n}\n\n.register-link a {\n  color: var(--primary-color);\n  text-decoration: none;\n  font-weight: 500;\n}\n</style>"],"mappings":";AA8CA,OAAOA,aAAY,MAAO,qBAAoB;AAE9C,eAAe;EACbC,UAAU,EAAE;IACVD;EACF,CAAC;EACDE,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,KAAK,EAAE,EAAE;MACTC,QAAQ,EAAE,EAAE;MACZC,UAAU,EAAE,EAAE;MACdC,aAAa,EAAE;IACjB;EACF,CAAC;EACDC,OAAO,EAAE;IACPC,YAAYA,CAAA,EAAG;MACb,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC,WAAW;IAC/B,CAAC;IACDC,aAAaA,CAAA,EAAG;MACd,MAAMC,UAAS,GAAI,4BAA2B;MAC9C,IAAI,IAAI,CAACT,KAAI,IAAK,CAACS,UAAU,CAACC,IAAI,CAAC,IAAI,CAACV,KAAK,CAAC,EAAE;QAC9C,IAAI,CAACE,UAAS,GAAI,SAAQ;MAC5B,OAAO;QACL,IAAI,CAACA,UAAS,GAAI,EAAC;MACrB;IACF,CAAC;IACDS,gBAAgBA,CAAA,EAAG;MACjB,MAAMC,YAAW,GAAI,OAAO,CAACF,IAAI,CAAC,IAAI,CAACT,QAAQ;MAC/C,MAAMY,YAAW,GAAI,OAAO,CAACH,IAAI,CAAC,IAAI,CAACT,QAAQ;MAE/C,IAAI,IAAI,CAACA,QAAO,KAAM,CAACW,YAAW,IAAK,CAACC,YAAY,CAAC,EAAE;QACrD,IAAI,CAACV,aAAY,GAAI,aAAY;MACnC,OAAO;QACL,IAAI,CAACA,aAAY,GAAI,EAAC;MACxB;IACF,CAAC;IACDW,YAAYA,CAAA,EAAG;MACb,IAAI,CAACN,aAAa,CAAC;MACnB,IAAI,CAACG,gBAAgB,CAAC;MAEtB,IAAI,CAAC,IAAI,CAACT,UAAS,IAAK,CAAC,IAAI,CAACC,aAAa,EAAE;QAC3CY,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAE;UAAEhB,KAAK,EAAE,IAAI,CAACA;QAAM,CAAC;MACvD;IACF;EACF;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}